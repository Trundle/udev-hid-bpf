# vim: set expandtab shiftwidth=2 tabstop=8 textwidth=0 filetype=yaml:

.templates_sha: &template_sha 3a2bcd49a2a6a34a5fdd35a7fc8c8f9246c0bffc

include:
  - project: 'freedesktop/ci-templates'
    ref: *template_sha
    file:
      - '/templates/fedora.yml'
      - '/templates/ci-fairy.yml'
  - template: Security/SAST.gitlab-ci.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'

stages:
  - prep             # prep work like rebuilding the container images if there is a change
  - build            # for actually building and testing things in a container
  - test
  - deploy

variables:
  FDO_UPSTREAM_REPO: libevdev/udev-hid-bpf
  FEDORA_VERSION: 39
  FEDORA_RELEASE_VERSION: 37
  FEDORA_PACKAGES: 'cargo clang elfutils-libelf-devel git-core rustfmt systemd-devel xz zlib-devel meson tree python3-pip jq'
  FEDORA_TAG:  '2024-03-25.0'
  RUST_BACKTRACE: '1'
  PREFIX: /_inst

.policy:
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  # cancel run when a newer version is pushed to the branch
  interruptible: true


#################################################################
#                                                               #
#                          prep stage                           #
#                                                               #
#################################################################

fail-if-fork-is-not-public:
  stage: prep
  script:
    - |
      if [ $CI_PROJECT_VISIBILITY != "public" ]; then
           echo "*************************************************************************************"
           echo "Project visibility must be set to 'public'"
           echo "Change this in $CI_PROJECT_URL/edit under 'Visibility, project features, permissions'"
           echo "*************************************************************************************"
           exit 1
      fi
  except:
    - main@$FDO_UPSTREAM_REPO

#
# Verify that commit messages are as expected, signed-off, etc.
#

check-commit:
  extends:
    - .fdo.ci-fairy
  stage: prep
  script:
    - ci-fairy check-commits --signed-off-by --junit-xml=results.xml
  except:
    - main@$FDO_UPSTREAM_REPO
  variables:
    GIT_DEPTH: 100
  artifacts:
    reports:
      junit: results.xml


python formatting:
  extends: .fdo.ci-fairy
  stage: prep
  script:
    - python3 -m venv _venv
    - . _venv/bin/activate
    - pip3 install ruff
    - ruff format --check .

#
# Build distribution-specific images used by the jobs in the build stage
#

fedora@container-prep:
  extends:
    - .fdo.container-build@fedora
    - .policy
  stage: prep
  variables:
    GIT_STRATEGY: none
    FDO_DISTRIBUTION_VERSION: $FEDORA_VERSION
    FDO_DISTRIBUTION_PACKAGES: $FEDORA_PACKAGES
    FDO_DISTRIBUTION_TAG: $FEDORA_TAG


fedora-release@container-prep:
  extends:
    - fedora@container-prep
  variables:
    FDO_DISTRIBUTION_VERSION: $FEDORA_RELEASE_VERSION


#################################################################
#                                                               #
#                       build stage                             #
#                                                               #
#################################################################

.cargo-build@template:
  extends:
    - .policy
  stage: build
  script:
    - cargo build
    - cargo test
  dependencies: []

.meson-build@template:
  extends:
    - .policy
  stage: build
  script:
    - .gitlab-ci/meson-build.sh
  variables:
    MESON_BUILDDIR: _build


.fedora-cargo@template:
  extends:
    - .fdo.distribution-image@fedora
    - .cargo-build@template
  variables:
    FDO_DISTRIBUTION_VERSION: $FEDORA_VERSION
    FDO_DISTRIBUTION_TAG: $FEDORA_TAG
  dependencies:
    - fedora@container-prep


.fedora-meson@template:
  extends:
    - .fdo.distribution-image@fedora
    - .meson-build@template
  variables:
    FDO_DISTRIBUTION_VERSION: $FEDORA_VERSION
    FDO_DISTRIBUTION_TAG: $FEDORA_TAG
  dependencies:
    - fedora@container-prep


cargo build and test:
  extends:
    - .fedora-cargo@template


cargo fmt:
  extends:
    - .fedora-cargo@template
  script:
    - cargo fmt --check


meson build and test:
  extends:
    - .fedora-meson@template
  script:
    - .gitlab-ci/meson-build.sh --run-install
    - tree $PREFIX
  variables:
    MESON_ARGS: --prefix=$PREFIX -Dudevdir=$PREFIX/lib/udev
  artifacts:
    paths:
      - $MESON_BUILDDIR
    when: on_success
    expire_in: 1 day


meson filter build:
  extends:
    - .fedora-meson@template
  parallel:
    matrix:
      - FILTER: trace
      - FILTER: XBox
      - FILTER: trace,XBox
  script:
    - export MESON_EXTRA_ARGS="-Dbpf-filter=$FILTER"
    - .gitlab-ci/meson-build.sh --run-install
    - tree $PREFIX
    - |
      if [ "$FILTER" = "trace" ]; then
        # We only expect one file to be installed
        test $(ls $PREFIX/lib/firmware/hid/bpf/ | wc -l) -eq 1
        test -e $PREFIX/lib/firmware/hid/bpf/trace_hid_events.bpf.o
      fi
    - |
      if [ "$FILTER" = "Xbox" ]; then
        # We only expect one file to be installed
        test $(ls $PREFIX/lib/firmware/hid/bpf/ | wc -l) -eq 1
        test -e $PREFIX/lib/firmware/hid/bpf/XBox_Elite_2.bpf.o
      fi
    - |
      if [ "$FILTER" = "trace,Xbox" ]; then
        # We only expect two files to be installed
        test $(ls $PREFIX/lib/firmware/hid/bpf/ | wc -l) -eq 2
        test -e $PREFIX/lib/firmware/hid/bpf/trace_hid_events.bpf.o
        test -e $PREFIX/lib/firmware/hid/bpf/XBox_Elite_2.bpf.o
      fi
  variables:
    MESON_ARGS: --prefix=$PREFIX -Dudevdir=$PREFIX/lib/udev

meson features build:
  extends:
    - .fedora-meson@template
  parallel:
    matrix:
      - FEATURE: testing
      - FEATURE: stable
      - FEATURE: userhacks
      - FEATURE: testing,userhacks
  script:
    - export MESON_EXTRA_ARGS="-Dbpfs=$FEATURE"
    - .gitlab-ci/meson-build.sh --run-install
    - tree $PREFIX
    - |
      if [ "$FEATURE" = "testing" ]; then
        test -e $PREFIX/lib/firmware/hid/bpf/XBox_Elite_2.bpf.o
      fi
    - |
      if [ "$FEATURE" = "userhacks" ]; then
        test -e $PREFIX/lib/firmware/hid/bpf/trace_hid_events.bpf.o
      fi
    - |
      if [ "$FILTER" = "testing,userhacks" ]; then
        test -e $PREFIX/lib/firmware/hid/bpf/trace_hid_events.bpf.o
        test -e $PREFIX/lib/firmware/hid/bpf/XBox_Elite_2.bpf.o
      fi
  variables:
    MESON_ARGS: --prefix=$PREFIX -Dudevdir=$PREFIX/lib/udev

#################################################################
#                                                               #
#                        test stage                             #
#                                                               #
#################################################################

sast:
  stage: test

cli install:
  extends:
    - .fedora-meson@template
  dependencies:
    - "meson build and test"
  needs:
    - "meson build and test"
  parallel:
    matrix:
      - INSTPREFIX: $PREFIX
      - INSTPREFIX: /foo
        PREFIXARG: '--prefix=/foo'
  script:
    - cd $MESON_BUILDDIR
    - ./udev-hid-bpf install --install-exe $PREFIXARG src/bpf/testing/HP_Elite_Presenter.bpf.o
    - tree $INSTPREFIX
    - test -e $INSTPREFIX/bin/udev-hid-bpf
    - test -e /etc/udev-hid-bpf/HP_Elite_Presenter.bpf.o
    - cat /etc/udev/rules.d/99-hid-bpf-HP_Elite_Presenter.rules

#################################################################
#                                                               #
#                       deploy stage                            #
#                                                               #
#################################################################

make release:
  extends:
    - .fedora-cargo@template
  stage: deploy
  script:
    - python3 -m venv _venv
    - . _venv/bin/activate
    - pip install yq
    - ln -s /usr/bin/true /usr/local/bin/udevadm
    - ln -s /usr/bin/true /usr/local/bin/systemd-hwdb
    # this is the default anyway but let's be explicit here
    - ./make_release.sh --verbose --features testing
    - mkdir -p tarball_dir
    - tar xf udev-hid-bpf*.tar.xz -C tarball_dir --strip-components=1
    - pushd tarball_dir
    - ./install.sh --verbose $PREFIX
    - test -e $PREFIX/bin/udev-hid-bpf
    - test -e $PREFIX/lib/udev/rules.d/81-hid-bpf.rules
    - test -e $PREFIX/lib/udev/hwdb.d/99-hid-bpf-testing.hwdb
    - test -e /lib/firmware/hid/bpf/HP_Elite_Presenter.bpf.o
    - ./uninstall.sh --verbose $PREFIX
    - test ! -e $PREFIX/bin/udev-hid-bpf
    - test ! -e $PREFIX/lib/udev/rules.d/81-hid-bpf.rules
    - test ! -e $PREFIX/lib/udev/hwdb.d/99-hid-bpf-testing.hwdb
    - test ! -e /lib/firmware/hid/bpf/HP_Elite_Presenter.bpf.o
    - popd
  variables:
    FDO_DISTRIBUTION_VERSION: $FEDORA_RELEASE_VERSION
    PREFIX: /usr
    GIT_DEPTH: 0
  artifacts:
    paths:
      - udev-hid-bpf*.tar*
  dependencies:
    - fedora-release@container-prep


pages:
  extends:
    - .fdo.ci-fairy
  stage: deploy
  script:
    - pip3 install sphinx sphinx-rtd-theme myst-parser
    - sphinx-build -b html doc public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
